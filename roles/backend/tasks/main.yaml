- name: disable current nodejs
  ansible.builtin.command: dnf module disable nodejs -y

- name: Enable nodejs 20
  ansible.builtin.command: dnf module enable nodejs:20 -y

- name: install nodejs
  ansible.builtin.package:
    name: "{{ item }}"
    state: present
  loop:
  - nodejs
  - mysql

- name: Create expense user
  ansible.builtin.user:
    name: expense

- name: include from common role
  include_role:
    name: common
    tasks_from: main

# - name: create app directory
#   ansible.builtin.file:
#     path: /app
#     state: directory

# - name: download the url
#   ansible.builtin.get_url:
#     url: https\://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip
#     dest: /tmp/backend.zip

# - name: unzip file
#   ansible.builtin.unarchive:
#     src: /tmp/backend.zip
#     dest: /app
#     remote_src: yes

- name: install dependencies
  tags:
  - deployment
  community.general.npm:
    path: /app

- name: copy backend service
  ansible.builtin.template:
    src: backend.service.j2 # it will search in template folder 
    dest: /etc/systemd/system/backend.service

- name: install python libs
  ansible.builtin.pip:
    name: " {{ item }}"
    executable: pip3.9
  loop:
  - PyMySQL
  - cryptography


- name: import mysql
  community.mysql.mysql_db:
    state: import
    name: all
    login_user: "{{ LOGIN_USER }}"
    login_password: "{{ LOGIN_PASSWORD }}"
    login_host: "{{ MYSQL_HOST }}"
    target: /app/schema/backend.sql

- name: daemon reload and restart service
  tags:
  - deployment
  ansible.builtin.systemd_service:
    enabled: true
    state: restarted
    daemon_reload: true
    name: backend
